//https://en.wikipedia.org/wiki/RIPEMD
//https://homes.esat.kuleuven.be/~bosselae/ripemd160.html (1996)
export const f = [
	(x: number, y: number, z: number): number => x ^ y ^ z, //Same as MD4-r3
	(x: number, y: number, z: number): number => z ^ (x & (y ^ z)), // like MD4-r1, optimize from (x&y)|(~x&z)
	(x: number, y: number, z: number): number => (x | ~y) ^ z,
	(x: number, y: number, z: number): number => y ^ (z & (x ^ y)), // like MD4-r1, optimize from (x&z)|(y&~z)
	(x: number, y: number, z: number): number => x ^ (y | ~z)
];
/**
 *
 */
//0,int(2**30 x sqrt(2)), int(2**30 x sqrt(3)),int(2**30 x sqrt(5)),int(2**30 x sqrt(7))
export const k = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e];
//int(2**30 x cbrt(2)),int(2**30 x cbrt(3)),int(2**30 x cbrt(5)),int(2**30 x cbrt(7)),0
export const kk = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000];
//In 128/256 the last constant of the parallel set is zeroed, but otherwise notice these are the same as @see kk
export const kk128 = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x00000000];
export const r = [
	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 /*r 0..15 -- -- -- -- -- -- -- -- -- -- */,
	7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8 /*r 16..31 -- -- -- -- -- -- -- -- -- --*/,
	3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12 /*r 32..47 -- -- -- -- -- -- -- -- -- --*/,
	1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2 /*r 48..63 -- -- -- -- -- -- -- -- -- --*/,
	4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13 /*r 64..79 -- -- -- -- -- -- -- -- -- --*/
];
export const rr = [
	5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12 /*r' 0..15  -- -- -- -- -- -- -- -- -- -*/,
	6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2 /*r' 16..31 -- -- -- -- -- -- -- -- -- -*/,
	15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13 /*r' 32..47 -- -- -- -- -- -- -- -- -- -*/,
	8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14 /*r' 48..63 -- -- -- -- -- -- -- -- -- -*/,
	12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11 /*r' 64..79 -- -- -- -- -- -- -- -- -- -*/
];
export const s = [
	11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8 /*s 0..15 -- -- -- -- -- -- -- -- -- -*/,
	7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12 /*s 16..31 -- -- -- -- -- -- -- -- -- */,
	11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5 /*s 32..47 -- -- -- -- -- -- -- -- -- */,
	11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12 /*s 48..63 -- -- -- -- -- -- -- -- -- */,
	9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6 /*s 64..79 -- -- -- -- -- -- -- -- -- */
];
export const ss = [
	8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6 /*s 0..15 -- -- -- -- -- -- -- -- -- -*/,
	9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11 /*s 16..31 -- -- -- -- -- -- -- -- -- */,
	9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5 /*s 32..47 -- -- -- -- -- -- -- -- -- */,
	15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8 /*s 48..63 -- -- -- -- -- -- -- -- -- */,
	8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11 /*s 64..79 -- -- -- -- -- -- -- -- -- */
];
export const iv = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
export const iv2 = [0x76543210, 0xfedcba98, 0x89abcdef, 0x01234567, 0x3c2d1e0f];
export const blockSizeBytes = 64; //512 bits
