import { suite } from 'uvu';
import * as assert from 'uvu/assert';
import { hex } from '../../../src/codec';
import { Serpent_256 } from '../../../src/crypto/sym/Serpent';

const tsts = suite('Serpent/256');

// prettier-ignore
const tests:[string,string,string][]=[
    //https://biham.cs.technion.ac.il/Reports/Serpent/Serpent-256-128.verified.test-vectors
    ['8000000000000000000000000000000000000000000000000000000000000000','00000000000000000000000000000000','A223AA1288463C0E2BE38EBD825616C0'],
    ['4000000000000000000000000000000000000000000000000000000000000000','00000000000000000000000000000000','EAE1D405570174DF7DF2F9966D509159'],
    ['2000000000000000000000000000000000000000000000000000000000000000','00000000000000000000000000000000','65F37684471E921DC8A30F45B43C4499'],
    ['1000000000000000000000000000000000000000000000000000000000000000','00000000000000000000000000000000','0EE036D0BC32B89C1CEF987F5229E4A9'],
    ['0000000000000000000000000000000000000000000000000000000000000000','00000000000000000000000000000000','49672BA898D98DF95019180445491089'],

    ['0000000000000000000000000000000000000000000000000000000000000000','80000000000000000000000000000000','8314675E8AD5C3ECD83D852BCF7F566E'],
    ['0000000000000000000000000000000000000000000000000000000000000000','40000000000000000000000000000000','893BF67B1A845579C8FADC05BFDC0894'],
    ['0000000000000000000000000000000000000000000000000000000000000000','20000000000000000000000000000000','302F8325DEB1E1A0955D6273368A0DC4'],
    ['0000000000000000000000000000000000000000000000000000000000000000','10000000000000000000000000000000','917B2F6A11DDDCEB53FEA01E194A6CC9'],

    ['000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F','00112233445566778899AABBCCDDEEFF','2868B7A2D28ECD5E4FDEFAC3C4330074'],
    ['2BD6459F82C5B300952C49104881FF482BD6459F82C5B300952C49104881FF48','EA024714AD5C4D84EA024714AD5C4D84','3E507730776B93FDEA661235E1DD99F0'],
];
for (const [key, plain, enc] of tests) {
    const c = new Serpent_256(hex.toBytes(key));
    tsts(`Serpent/256(${key}).encrypt(${plain})`, () => {
        //Set found equal to plain-source-bytes
        const found = hex.toBytes(plain);
        //Encrypt a block (note the test vectors are all one block)
        c.encryptBlock(found);
        assert.is(hex.fromBytes(found), enc);
    });
    tsts(`Serpent/256(${key}).decrypt(${enc})`, () => {
        //Set found equal to encoded-source-bytes
        const found = hex.toBytes(enc);
        //Decrypt a block (note the test vectors are all one block)
        c.decryptBlock(found);
        assert.is(hex.fromBytes(found), plain);
    });
}

tsts.run();
