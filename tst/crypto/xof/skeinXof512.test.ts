import { suite } from 'uvu';
import * as assert from 'uvu/assert';
import { hex } from '../../../src/codec';
import { SkeinXof512 } from '../../../src/crypto/hash/Skein';

const tsts = suite('SkeinXOF 512');

const tests: [string, number, string][] = [
	// https://en.wikipedia.org/wiki/Skein_%28hash_function%29
	['', 32, '39CCC4554A8B31853B9DE7A1FE638A24CCE6B35A55F2431009E18780335D2621'],
	[
		'',
		64,
		'BC5B4C50925519C290CC634277AE3D6257212395CBA733BBAD37A4AF0FA06AF4' +
			'1FCA7903D06564FEA7A2D3730DBDB80C1F85562DFCC070334EA4D1D9E72CBA7A',
	],
	//github.com/aead/skein/skein256
	[
		'FBD17C26B61A82E12E125F0D459B96C91AB4837DFF22B39B78439430CDFC5DC8' +
			'78BB393A1A5F79BEF30995A85A12923339BA8AB7D8FC6DC5FEC6F4ED22C122BB' +
			'E7EB61981892966DE5CEF576F71FC7A80D14DAB2D0C03940B95B9FB3A727C66A' +
			'6E1FF0DC311B9AA21A3054484802154C1826C2A27A0914152AEB76F1168D4410',
		128,
		'8C25D314110D1C0D58054C96A19D571E26A45D5362AA8F47547E53E0BE4A830A' +
			'5F2C29CCD88E2185FEBAD024A4696F2DBE8307DC150E7A58B3793B1A93FAE252' +
			'3E2D239C59A23A1CC127B3C481A9809162E60B4CB01C011B9630322C8FE9745D' +
			'56D0F3AED54B3490578DB4692901EAFC1960C15359176A9C0990B32B8CA8F94B',
	],
	//Other values
	['', 1, '6D'],
	[
		'',

		128,

		'8C339F4249EFD1880CEDA3EA247C4DE4521821D5BC15036BD2794A391E4F448F' +
			'832C2C92292841034A96689FA750C07E89A595F4909FC065C522205E697D1634' +
			'B08D0D58E913AC374C6A6B46EBA7EA5AF3978495602724CD851853AC94BADC2F' +
			'98C2360283A8B33B7710FF4610D14103F6A8AE2348A799679976A837C5B4AEF2',
	],
	[
		'',

		256,

		'B717E1D744744287D1DF7804ECA7CB0557D635ACCD56613A7549541B2EB2A69B' +
			'7CFC528094218402BAB5A16BCAF1E00A41C57449C4F9500585ACAD46F5F4CC0C' +
			'5A7379386C752888A643028F438D0E3FA74A4974DEBC67B4F0B8FA37F2B956F1' +
			'6563685B0F1BE8C8C802497C4AFCE668E5DF73D34E4DFCE447D2FB6A49911737' +
			'CD98F0E0C467E46855CDD607E870E927CB1893A434263CFC416BFD715BA027CA' +
			'CF0D52AA439853DA541744E809F4D8D11E86A54266A9DAA207D7440F3880D59B' +
			'8C216D9140CAD89B47C68021F07261583E3F8CAAC19EC1749CEA92D7EF76CAF7' +
			'3E460986351944590A1631F09CEF166AB9CBB0F90955AD4B7D389C96F39589BA',
	],
];
for (const [source, size, expect] of tests) {
	tsts(`SkeinXOF512(${size}) x${source}`, () => {
		const xof = new SkeinXof512(size);
		xof.write(hex.toBytes(source));
		const md = xof.sum();
		assert.is(hex.fromBytes(md), expect);
	});
}

tsts.run();
