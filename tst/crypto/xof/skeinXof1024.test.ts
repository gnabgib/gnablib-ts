import { suite } from 'uvu';
import * as assert from 'uvu/assert';
import { hex } from '../../../src/codec';
import { SkeinXof1024 } from '../../../src/crypto/hash/Skein';

const tsts = suite('SkeinXOF 1024');

const tests: [string, number, string][] = [
	//github.com/aead/skein/skein256
	[
		'',
		128,
		'0FFF9563BB3279289227AC77D319B6FFF8D7E9F09DA1247B72A0A265CD6D2A62' +
			'645AD547ED8193DB48CFF847C06494A03F55666D3B47EB4C20456C9373C86297' +
			'D630D5578EBD34CB40991578F9F52B18003EFA35D3DA6553FF35DB91B81AB890' +
			'BEC1B189B7F52CB2A783EBB7D823D725B0B4A71F6824E88F68F982EEFC6D19C6',
	],
	[
		'FBD17C26B61A82E12E125F0D459B96C91AB4837DFF22B39B78439430CDFC5DC8' +
			'78BB393A1A5F79BEF30995A85A12923339BA8AB7D8FC6DC5FEC6F4ED22C122BB' +
			'E7EB61981892966DE5CEF576F71FC7A80D14DAB2D0C03940B95B9FB3A727C66A' +
			'6E1FF0DC311B9AA21A3054484802154C1826C2A27A0914152AEB76F1168D4410',
		257,
		'56A0CAB1AD315859DA7A6CFC35807CBFE039AF06CA4B8671C053360BDA0B17C1' +
			'4A9EB5EB2ABB01B0DB3F45C03CD30C69D7C1B70C5C9EF74C06FB3AEF0C843CE9' +
			'B4C1BA2294DDB5C71CAB692CEDC1E6F908C471B38C0C583418B55AEFDDFE08AB' +
			'A4055D0D19EDB5CCBA16C3E288471EFE463E6BF6CC346CC74F6C013E0293E6DF' +
			'D2E4AA66A92242FD395B6D91AAAD5A071C449D77EA00E44ECC75073890AC50D4' +
			'F4210E8C9DA45385A46D214A0FCCC131DB3F842F955E6E76AC311B3BF439DD51' +
			'9BEDD691785ADF7540F3163AD1216CF2ADB7D4BF40D93BE3184AEF51B651CA26' +
			'C7EC44073F43AD689D269EA9FF02F8D2C8932FE6CED0292F97FB5F07CA276D6B' +
			'43',
	],
	//Other values
	['', 1, '37'],

	[
		'',
		64,
		'E2943EB0BC0EFABD49503A76EDF7CFCF072DB25BAD94ED44FE537284163F3119' +
			'C47AC6F78699B4272255966E0ABA65C75A0A64BD23DF6996D1BC3174AFD9FA8B',
	],
	[
		'',

		256,

		'0364D7009BA66DF95782FBA021BE3548EE846DDF36E52631C798A6F611660E0F' +
			'16F777A313CB7C29E699104292FF35F09A5830E74271B13D5DADB043F893D08B' +
			'E4C46BB87B5B282B3E5BB9611EBF6B403C659D166B2BD3448F6AA25CD65E20AC' +
			'FD15DEAB233873AF4F4227B33B9207388E0347BC1E49095C4ABB1718DCCFF093' +
			'F01408BE8FEB1CB737231AB3ACE72F603EBD89B6B203A3F381C0B8C8E9DD5193' +
			'772BF63A3671FB9F8F0FC9419E86B493550F71F0FB3B3E88D3DA43F43CD7A811' +
			'F0DBDA3D0B37E618710C5B15E61539E4B31F9BDFF5CCD0FCA391367809C8BCD0' +
			'10D164D9D334C32373D126CC80C32285F12EED06FEF9ACCED8B2C877AB168F53',
	],
];
for (const [source, size, expect] of tests) {
	tsts(`SkeinXOF1024(${size}) x${source}`, () => {
		const xof = new SkeinXof1024(size);
		xof.write(hex.toBytes(source));
		const md = xof.sum();
		assert.is(hex.fromBytes(md), expect);
	});
}

tsts.run();
