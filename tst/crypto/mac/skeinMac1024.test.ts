import { suite } from 'uvu';
import * as assert from 'uvu/assert';
import { hex } from '../../../src/codec';
import { SkeinMac1024 } from '../../../src/crypto/hash/Skein';

const tsts = suite('SkeinMAC 1024');

const tests:[string,string,string][]=[
    //github.com/aead/skein
    [
        'CB41F1706CDE09651203C2D0EFBADDF847A0D315CB2E53FF8BAC41DA0002672E'+
        '920244C66E02D5F0DAD3E94C42BB65F0D14157DECF4105EF5609D5B0984457C1'+
        '935DF3061FF06E9F204192BA11E5BB2CAC0430C1C370CB3D113FEA5EC1021EB8'+
        '75E5946D7A96AC69A1626C6206B7252736F24253C9EE9B85EB852DFC81463134',

        '',

        'BCF37B3459C88959D6B6B58B2BFE142CEF60C6F4EC56B0702480D7893A2B0595'+
        'AA354E87102A788B61996B9CBC1EADE7DAFBF6581135572C09666D844C90F066'+
        'B800FC4F5FD1737644894EF7D588AFC5C38F5D920BDBD3B738AEA3A3267D161E'+
        'D65284D1F57DA73B68817E17E381CA169115152B869C66B812BB9A84275303F0'
    ],
    [
        'CB41F1706CDE09651203C2D0EFBADDF847A0D315CB2E53FF8BAC41DA0002672E'+
        '920244C66E02D5F0DAD3E94C42BB65F0D14157DECF4105EF5609D5B0984457C1'+
        '935DF3061FF06E9F204192BA11E5BB2CAC0430C1C370CB3D113FEA5EC1021EB8'+
        '75E5946D7A96AC69A1626C6206B7252736F24253C9EE9B85EB852DFC81463134'+
        '6C',

        'D3090C72',

        'DF0596E5808835A3E304AA27923DB05F61DAC57C0696A1D19ABF188E70AA9DBC'+
        'C659E9510F7C9A37FBC025BD4E5EA293E78ED7838DD0B08864E8AD40DDB3A880'+
        '31EBEFC21572A89960D1916107A7DA7AC0C067E34EC46A86A29CA63FA250BD39'+
        '8EB32EC1ED0F8AC8329F26DA018B029E41E2E58D1DFC44DE81615E6C987ED9C9'
    ],
];
for (const [key, msg, expect] of tests) {
    tsts(`SkeinMAC-1024(x${key},x${msg})`, () => {
        const mac=new SkeinMac1024(hex.toBytes(key));
        mac.write(hex.toBytes(msg));
        const md = mac.sum();
        assert.is(hex.fromBytes(md), expect);
    });
}

tsts.run();
