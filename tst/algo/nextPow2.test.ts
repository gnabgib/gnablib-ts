import { suite } from 'uvu';
import { nextPow2 } from '../../src/algo';
import * as assert from 'uvu/assert';

const tsts = suite('nextPow2');

const tests: [number, number][] = [
	[0, 0],
	[1, 1],
	[2, 2],
	[3, 4],
	[4, 4],
	[5, 8],
	[6, 8],
	[7, 8],
	[8, 8],
	[63, 64],
	[64, 64],
	[65, 128],
	[127, 128],//2**7
	[128, 128],
	[129, 256],//2**8
	[256, 256],
	[257, 512],//2**9
	[512, 512],
	[513, 1024],//2**10
	[1024, 1024],
	[1025, 2048],//2**11
	[2048, 2048],
	[2049, 4096],//2**12
	[4096, 4096],
	[4097, 8192],//2**13
	[8192, 8192],
	[8193, 16384],//2**14
	[16384, 16384],
	[16385, 32768],//2**15
	[32769, 65536],//2**16
	[65537, 131072],//2**17
	[131073, 262144],//2**18
	[262145, 524288],//2**19
	[524289, 1048576],//2**20
	[1048577, 2097152],//2**21
	[2097153, 4194304],//2**22
	[4194305, 8388608],//2**23
	[8388609, 16777216],//2**24
	[16777217, 33554432],//2**25
	[33554433, 67108864],//2**26
	[67108865, 134217728],//2**27
	[134217729, 268435456],//2**28
	[268435457, 536870912],//2**29
	[536870913, 1073741824],//2**30
	[1073741825, 2147483648],//2**31
	//2**32+ isn't possible with 32bit integers (which JS is constrained to)
	//[2147483649, 4294967296],
];
for (const [n, expect] of tests) {
	tsts(`nextPow2(${n})`, () => {
		const found = nextPow2(n);
		assert.equal(found, expect);
	});
}

tsts.run();
